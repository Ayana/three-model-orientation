{"version":3,"sources":["assets/model.obj","ThreeSceneSample.js","App.js","index.js"],"names":["module","exports","ThreeSceneSample","scene","camera","renderer","model","render","animate","window","requestAnimationFrame","onWindowResize","aspect","innerWidth","innerHeight","updateProjectionMatrix","setSize","objectRotation","e","gammaRotation","gamma","Math","PI","rotation","y","useEffect","document","getElementById","addEventListener","remove","THREE","position","set","ambientLight","add","pointLight","light","OBJLoader","load","MODEL","object","children","geometry","scale","material","map","mesh","antialias","setPixelRatio","devicePixelRatio","body","appendChild","domElement","init","id","App","className","ReactDOM"],"mappings":"sGAAAA,EAAOC,QAAU,IAA0B,mC,6JCgI5BC,EAzHU,WACvB,IAAIC,EAAOC,EAAQC,EAAoBC,EAwFvC,SAASC,IACPF,EAASE,OAAOJ,EAAOC,GAIzB,SAASI,IACPC,OAAOC,sBAAsBF,GAG7BD,IAGF,SAASI,IACPP,EAAOQ,OAASH,OAAOI,WAAaJ,OAAOK,YAC3CV,EAAOW,yBAEPV,EAASW,QAAQP,OAAOI,WAAYJ,OAAOK,aAG7C,SAASG,EAAeC,GACtB,IAAIC,EAAgBD,EAAEE,MAAQF,EAAEE,OAASC,KAAKC,GAAK,KAAO,EAC1DhB,EAAMiB,SAASC,EAAIL,EAGrB,OA9GAM,qBAAU,WACYC,SAASC,eAAe,eAChCC,iBACV,SACA,YASJ,WACgBF,SAASC,eAAe,WAC9BE,SASR,IACMjB,EAASH,OAAOI,WAAaJ,OAAOK,aAI1CV,EAAS,IAAI0B,IALD,GAK8BlB,EAH7B,EACD,OAGLmB,SAASC,IAAI,EAAG,EAAG,IAI1B7B,EAAQ,IAAI2B,IAGZ,IAAMG,EAAe,IAAIH,IAAmB,QAAU,GACtD3B,EAAM+B,IAAID,GAEV,IAAME,EAAa,IAAIL,IAAiB,SAAU,IAClD3B,EAAM+B,IAAIC,GAEV,IAAMC,EAAQ,IAAIN,IAAuB,QAAU,GACnDM,EAAML,SAASC,IAAI,GAAI,GAAI,IAC3B7B,EAAM+B,IAAIE,IAGK,IAAIC,KACZC,KAAKC,KAAO,SAACC,GAClBlC,EAAQkC,EAAOC,SAAS,GACxBD,EAAOT,SAASC,IAAI,GAAI,EAAG,GAC3B7B,EAAM+B,IAAIM,GACVjC,OAGF,IAAImC,EAAW,IAAIZ,IAA2B,IAAK,GAAI,IAEvDY,EAASC,OAAO,EAAG,EAAG,GAEtB,IAAIC,EAAW,IAAId,IAAwB,CACzCe,KAAK,IAAIf,KAAsBQ,KAAK,oBAGlCQ,EAAO,IAAIhB,IAAWY,EAAUE,GACpCzC,EAAM+B,IAAIY,IAYVzC,EAAW,IAAIyB,IAAoB,CAAEiB,WAAW,KACvCC,cAAcvC,OAAOwC,kBAC9B5C,EAASW,QAAQP,OAAOI,WAAYJ,OAAOK,aAC3CY,SAASwB,KAAKC,YAAY9C,EAAS+C,YAEnC3C,OAAOmB,iBAAiB,oBAAqBX,GAAgB,GA7EzDoC,GACA7C,IACAC,OAAOmB,iBAAiB,SAAUjB,GAAgB,MAEpD,MAsGF,oCACE,yBAAK2C,GAAG,WACN,4BAAQA,GAAG,eAAX,iB,MC5GOC,MARf,WACE,OACE,yBAAKC,UAAU,OACb,kBAAC,EAAD,QCNNC,IAASlD,OAAO,kBAAC,EAAD,MAASmB,SAASC,eAAe,W","file":"static/js/main.e6fba027.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/model.dfebfcc1.obj\";","import React, { useEffect } from \"react\"\nimport * as THREE from \"three\"\n// import { DeviceOrientationControls } from \"three/examples/jsm/controls/DeviceOrientationControls.js\"\nimport { OBJLoader } from \"three/examples/jsm/loaders/OBJLoader.js\"\n\nimport MODEL from \"./assets/model.obj\"\n\nconst ThreeSceneSample = () => {\n  let scene, camera, renderer, controls, model\n\n  useEffect(() => {\n    const startButton = document.getElementById(\"startButton\")\n    startButton.addEventListener(\n      \"click\",\n      function () {\n        init()\n        animate()\n        window.addEventListener(\"resize\", onWindowResize, false)\n      },\n      false\n    )\n  })\n\n  function init() {\n    var overlay = document.getElementById(\"overlay\")\n    overlay.remove()\n\n    // camera = new THREE.PerspectiveCamera(\n    //   75,\n    //   window.innerWidth / window.innerHeight,\n    //   1,\n    //   1100\n    // )\n    // Camera setting\n    const fov = 95\n    const aspect = window.innerWidth / window.innerHeight\n    const near = 1\n    const far = 1500\n\n    camera = new THREE.PerspectiveCamera(fov, aspect, near, far)\n    camera.position.set(0, 0, 20) //x, y, z\n\n    // controls = new DeviceOrientationControls(camera)\n\n    scene = new THREE.Scene()\n\n    // Add a light\n    const ambientLight = new THREE.AmbientLight(0x404040, 2)\n    scene.add(ambientLight)\n\n    const pointLight = new THREE.PointLight(0xffffff, 0.6)\n    scene.add(pointLight)\n\n    const light = new THREE.DirectionalLight(0x404040, 3)\n    light.position.set(10, 20, 20)\n    scene.add(light)\n\n    // Model setting\n    const loader = new OBJLoader()\n    loader.load(MODEL, (object) => {\n      model = object.children[0]\n      object.position.set(0, -3, 0)\n      scene.add(object)\n      render()\n    })\n\n    var geometry = new THREE.SphereBufferGeometry(500, 60, 40)\n    // invert the geometry on the x-axis so that all of the faces point inward\n    geometry.scale(-1, 1, 1)\n\n    var material = new THREE.MeshBasicMaterial({\n      map: new THREE.TextureLoader().load(\"assets/sky.jpg\"),\n    })\n\n    var mesh = new THREE.Mesh(geometry, material)\n    scene.add(mesh)\n\n    // var helperGeometry = new THREE.BoxBufferGeometry(100, 100, 100, 4, 4, 4)\n    // var helperMaterial = new THREE.MeshBasicMaterial({\n    //   // color: 0xff00ff,\n    //   transparent: true,\n    //   wireframe: true,\n    // })\n    // var helper = new THREE.Mesh(helperGeometry, helperMaterial)\n    // scene.add(helper)\n\n    // Render\n    renderer = new THREE.WebGLRenderer({ antialias: true })\n    renderer.setPixelRatio(window.devicePixelRatio)\n    renderer.setSize(window.innerWidth, window.innerHeight)\n    document.body.appendChild(renderer.domElement)\n\n    window.addEventListener(\"deviceorientation\", objectRotation, false)\n  }\n\n  // Render\n  function render() {\n    renderer.render(scene, camera)\n  }\n\n  // Animate\n  function animate() {\n    window.requestAnimationFrame(animate)\n\n    // controls.update()\n    render()\n  }\n\n  function onWindowResize() {\n    camera.aspect = window.innerWidth / window.innerHeight\n    camera.updateProjectionMatrix()\n\n    renderer.setSize(window.innerWidth, window.innerHeight)\n  }\n\n  function objectRotation(e) {\n    var gammaRotation = e.gamma ? e.gamma * (Math.PI / 600) : 0\n    model.rotation.y = gammaRotation\n  }\n\n  return (\n    <>\n      <div id=\"overlay\">\n        <button id=\"startButton\">Start Demo</button>\n      </div>\n    </>\n  )\n}\nexport default ThreeSceneSample\n","import React from \"react\"\n// import ThreeScene from './ThreeScene';\n// import ThreeSceneControls from \"./ThreeSceneControls\";\n// import ThreeSceneOrientation from \"./ThreeSceneOrientation\";\nimport ThreeSceneSample from \"./ThreeSceneSample\"\nimport \"./style.css\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ThreeSceneSample />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}